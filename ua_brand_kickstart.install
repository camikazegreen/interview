<?php

/**
 * Implements hook_install_tasks().
 */
function ua_brand_kickstart_install_tasks() {
  $tasks = array();

//  $tasks['ua_brand_kickstart_install_additional_modules'] = array(
//    'display_name' => st('Install additional modules'),
//  );

  $tasks['ua_brand_kickstart_enable_blocks'] = array(
    'display_name' => st('Enable blocks'),
  );

  return $tasks;
}

/**
 * @file
 * Installation code for UA Brand Kickstart
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function ua_brand_kickstart_install() {
  // Add default text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Set the default and admin themes.
  variable_set('theme_default', 'ua_zen');
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
  theme_enable(array('uagc_zen'));

  // TODO: figure out why/how Bartik is getting enabled.
  theme_disable(array('bartik'));

  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
  );
  menu_link_save($item);

  // Update the menu router information.
  menu_rebuild();

  // Force any permissions in features to be built before assigning roles.
  features_rebuild();

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
}

/**
 * Enables some default blocks.
 */
function ua_brand_kickstart_enable_blocks() {
  $default_theme = variable_get('theme_default', 'ua_zen');
  $admin_theme = 'seven';
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'region' => 'content',
      'cache' => DRUPAL_NO_CACHE,
    ),
    array(
      'module' => 'system',
      'delta' => 'user-menu',
      'theme' => $default_theme,
      'region' => 'footer',
      'title' => '<none>',
      'cache' => DRUPAL_CACHE_PER_ROLE,
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $default_theme,
      'region' => 'header',
      'cache' => DRUPAL_NO_CACHE,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'region' => 'help',
      'cache' => DRUPAL_NO_CACHE,
    ),
    array(
      'module' => 'superfish',
      'delta' => 'superfish-1',
      'theme' => $default_theme,
      'region' => 'navigation',
      'title' => '<none>',
      'cache' => DRUPAL_NO_CACHE,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'region' => 'content',
      'cache' => DRUPAL_NO_CACHE,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'region' => 'help',
      'cache' => DRUPAL_NO_CACHE,
    ),
  );

  ua_brand_kickstart_setup_blocks($blocks);
}

/**
 * Prepares and executes database queries to insert blocks based on an array of
 * nested block data arrays.
 */
function ua_brand_kickstart_setup_blocks($blocks = array()) {
  $block_defaults = array(
    'status' => 1,
    'weight' => 0,
    'visibility' => 0,
    'pages' => '',
    'title' => '',
  );

  if (!empty($blocks)) {
    drupal_static_reset();
    _block_rehash($admin_theme);
    _block_rehash($default_theme);
    foreach ($blocks as $record) {
      // Merge default values.
      $record = array_merge($block_defaults, $record);
      $module = array_shift($record);
      $delta = array_shift($record);
      $theme = array_shift($record);
      db_update('block')
        ->fields($record)
        ->condition('module', $module)
        ->condition('delta', $delta)
        ->condition('theme', $theme)
        ->execute();
    }
  }
}

/**
 * Install task to install additional modules.
 *
 * Any modules providing custom blocks should be enabled here, and not before
 * (as an install profile dependency), because the themes are setup during
 * ua_brand_kickstart_install(), which means region assignment can only happen
 * after that.
 */
function ua_brand_kickstart_install_additional_modules() {
  $modules = array(
    'ua_brand_navigation',
  );

  module_enable($modules, FALSE);
}
